import Head from 'next/head'
import Image from 'next/image'
// import Link from 'next/link'
import styles from '../styles/Home.module.css'

import { Button, Link} from '@nextui-org/react';

export default function Genre( {genre, tracks} ) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Music App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Link href='/'>
        <Button size="sm" color="gradient">Home</Button>
      </Link>

      <main>
        <h1>Genre: {genre} </h1>
      </main>
      <aside>
        <h2>Recommends Tracks</h2>
        <ul>
          {/* {console.log(tracks)} */}
          {tracks.map(track => <li key={track.id}>{track.artists[0].name} - {track.name}:<a href={track.external_urls.spotify}>Link</a></li>)}
        </ul>
      </aside>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

// reference: https://nextjs.org/docs/basic-features/data-fetching/get-static-paths 
export async function getStaticPaths() {
  const data = await fetch("https://api.spotify.com/v1/recommendations/available-genre-seeds",
  {  
    headers: {
    Authorization: `Bearer ${process.env.SPOTIFY_OAUTH_TOKEN}`
    }
  }).then(response => response.json());

  const genrePaths = data.genres.map( genre => { return { params: { genre } } } );

  return {
    paths: genrePaths,
    fallback: false // false or 'blocking'
  }
}

export async function getStaticProps({params}) {

  // console.log(params)

  const data = await fetch(`https://api.spotify.com/v1/recommendations?seed_genres=${params.genre}`,
  {  
    headers: {
    Authorization: `Bearer ${process.env.SPOTIFY_OAUTH_TOKEN}`
    }
  }).then(response => response.json());

  console.log(data)

  return {
    props: {
      genre: params.genre,
      tracks: data.tracks
    }
  }
}